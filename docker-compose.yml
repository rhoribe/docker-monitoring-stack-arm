version: '3'
x-logging:
  &default-logging
  driver: "json-file"
  options: 
    tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}|{{.Hostname}}|{{.ID}}"

services:
  prometheus:
    image: prom/prometheus:v2.55.0
    container_name: prometheus
    volumes:
      - "./prometheus/:/etc/prometheus"
      - "prometheus_data:/prometheus"
    ports:
      - 9090:9090
    restart: always
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
      - "--storage.tsdb.retention.time=60d"
      - "--storage.tsdb.retention.size=25GB"
      - "--storage.tsdb.min-block-duration=15m"
      - "--storage.tsdb.max-block-duration=15m"
      - "--web.enable-remote-write-receiver"
    logging: *default-logging
    networks:
      - mon

  alertmanager:
    image: prom/alertmanager:v0.27.0
    container_name: alertmanager
    volumes:
      - "./alertmanager/:/etc/alertmanager"
      - "alermanager_data:/alertmanager"
    expose:
      - 9093
    restart: always
    command:
      - "--config.file=/etc/alertmanager/alertmanager.yml"
      - "--storage.path=/alertmanager"
    logging: *default-logging
    networks:
      - mon

  node-exporter:
    image: prom/node-exporter:v1.8.2
    container_name: node-exporter
    volumes:
      - "/proc:/host/proc:ro"
      - "/sys:/host/sys:ro"
      - "/:/rootfs:ro,rslave"
      - "/:/host:ro,rslave"
    expose:
      - 9100
    restart: always
    command:
      - "--path.rootfs=/host"
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.ignored-mount-points"
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    logging: *default-logging
    networks:
      - mon

  grafana:
    image: grafana/grafana:11.3.0
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana:/etc/grafana/provisioning
    ports: 
      - 3000:3000
    restart: always
    environment:
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor traceQLStreaming metricsSummary
    logging: *default-logging
    networks:
      - mon

  loki:
    image: grafana/loki:main-c0856bf
    container_name: loki
    volumes:
      - loki_data:/loki
    expose:
      - 3100
    restart: always
    logging: *default-logging
    networks:
      - mon

  promtail:
    image: grafana/promtail:k226-bloom-fixes-v2-b886c5c
    container_name: promtail
    volumes:
      - ./promtail/config.yml:/etc/promtail/config.yml
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro,rshared
      - /var/run/docker.sock:/var/run/docker.sock:ro,rshared
    expose:
      - 9080
    restart: always
    command: -config.file=/etc/promtail/config.yml 
    logging: *default-logging
    networks:
      - mon

  cadvisor:
    image: gcr.io/cadvisor/cadvisor-arm64:v0.51.0
    container_name: cadvisor
    volumes:
      - /var/run:/var/run:ro,rshared 
      - /etc/machine-id:/etc/machine-id:ro,rshared
      - /sys:/sys:ro,rshared 
      - /var/lib/docker/:/var/lib/docker:ro,rshared 
    devices:
      - /dev/kmsg    
    expose:
      - 8080
    restart: always
    logging: *default-logging
    networks:
      - mon
       

############# NETWORKS #############
networks:
  mon: 
    name: mon
    driver: bridge 


############# VOLUMES #############
volumes:
    prometheus_data: 
      name: prometheus_data
    alermanager_data: 
      name: alermanager_data
    grafana_data:
      name: grafana_data
    loki_data:
      name: loki_data
